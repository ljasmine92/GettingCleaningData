## These two functions cache the inverse of a matrix.
## The makeCacheMatrix function creates a matrix object that can cache its inverse.
makeCacheMatrix <- function(x = matrix()) {
i<-NULL
set <-function(y){
x <<- y
i <<- NULL
}
get <- function() x
setinverse<-function(inverse) i<<-inverse
getinverse <-function() i
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## The cacheSolve function computes the inverse of the special matrix returend by
## makeCacheMatrix above. If the inverse has already been calculated (and the
## matrix has not changed), then the cachesolve should retrieve the inverse from the cache.
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
i <-x$getinverse()
if(!is.null(i)){
message("getting cached data")
return(i)
}
data <-x$get()
i<-solve(data,...)
x$setinverse(i)
i
}
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()         # Returns original matrix
cacheSolve(amatrix)   # Computes, caches, and returns    matrix inverse
amatrix$getinverse()  # Returns matrix inverse
cacheSolve(amatrix)   # Returns cached matrix inverse using previously computed matrix inverse
amatrix$set(matrix(c(0,5,99,66), nrow=2, ncol=2)) # Modify existing matrix
cacheSolve(amatrix)   # Computes, caches, and returns new matrix inverse
amatrix$get()         # Returns matrix
amatrix$getinverse()  # Returns matrix inverse
getwd()
data1<-read.csv("C:/Users/Yugang/001.csv"),sep=",",header=TRUE)
?read.csv
data1<-read.csv(C:/Users/Yugang/001.csv,sep=",",header=TRUE)
data1<-read.csv("C:/Users/Yugang/001.csv",sep=",",header=TRUE)
data1
data2<-read.csv("c:/users/Yugang/002.csv",sep=",",header=TRUE)
data3<-rbind(data1,data2)
data3
summary(data3)
mean1<-mean(data3$sulfate,na.rm=TRUE)
mean1
?dataframe
?frame
?frame()
?nrow()
?complete.cases
rowcount<-nrow(data3[complete.cases(data3),])
rowcount
cordata<cor(data3$sulfate,data3$nitrate,use="complete.obs")
cordata<-cor(data3$sulfate,data3$nitrate,use="complete.obs")
cordata
getwd()
outcome<-read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
outcome[,11]<-as.numeric(outcome[,11])
hist(outcome[,11])
heartattack<-min(outcome[,11])
heartattach
heartattack
heartattack<-min(outcome[,11],na.rm=TRUE)
heartattack
outcome[,7]<-heartattach
outcome[,7]<-heartattack
outcome[,7]
state1<-[outcome,7]
state1<-outcome[,7]
state1<-outcome[,11]==heartattack
state1
outcome[,7]
outcome$State
state2<-outcome[,7]
state2<-outcome[which(outcome[,11]==heartattack)]
state2<-outcome[which(outcome[,11]==heartattack),]
state2
state2<-outcome[which(outcome[,11]==heartattack),7]
state2
state2<-outcome[which(outcome[,11]==heartattack),select=State]
state2<-subset(outcome[which(outcome[,11]==heartattack),select=outcome$State])
state2<-subset(outcome,outcome[,11]==heartattack,select=outcome$State)
state2
state2<-outcome[which(outcome[,11]==heartattack),7]
state2
state2<-outcome[which(outcome[,11]==heartattack)]
state2<-outcome[outcome[,11]==heartattack,7]
state2
state2<-outcome[which(outcome[,11]==heartattack),]
state2
state2<-outcome[7,which(outcome[,11]==heartattack)]
state2
newstate<-subset(outcome,outcome[,11]==heartattack,select=c(State))
newstate
> newstate<-subset(outcome,outcome[,11]==heartattack,select=c("State"))
newstate<-subset(outcome,outcome[,11]==heartattack,select=c("State"))
newstate
newfile<-read.csv("outcome-of-measures.csv",colClasses = "character",c('col1', 'col2')]
newfile<-read.csv("outcome-of-measures.csv",colClasses = "character")[,c('col1', 'col2')]
newfile<-read.csv("outcome-of-care-measures.csv",colClasses = "character")[,c('col1', 'col2')]
newfile<-read.csv("outcome-of-care-measures.csv",colClasses = "character")[,c(7,11,17,23')]
newfile
quit
exit
data1<-read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome<-subset(data1,select=c(7,11,17,23))
head(outcome)
ncol(outcome)
heartattack<-min(outcome[,1],na.rm=TRUE)
heartattack
heartattack<-min(outcome[,2],na.rm=TRUE)
heartattack
outcome<-subset(data1,select=c(2,7,11,17,23))
head(outcome)
ncol(outcome)
heartattack<-min(outcome[,2],na.rm=TRUE)
heartattack
heartattack<-min(outcome[,3],na.rm=TRUE)
heartattack
data2<-outcome[heartattack,c(1,2,3)]
data2
data2<-outcome[outcome[,3]==heartattack,c(1,2,3)]
data2
data2<-outcome[outcome[,3]==heartattack,c(1)]
data2
source("best.R")
colnames(outcome)
source("best.R")
source("best.R")
best("TX","heart attack")
best("MD","pneumonia")
best("BB","heart attack")
best("NY","hert attack")
source(rankhospital.R)
source("rankhospital")
getwd()
source('~/rankhospital.R')
rankhospital("MD","heart attack","worst")
rankhospital("TX","heart failure",4)
source('~/rankall.R')
head(rankall("heart attack",20)10)
head(rankall("heart attack",20),10)
tail(rankall("penumonia","worst"),3)
tail(rankall("penumonia","worst"),3)
tail(rankall("pneumonia","worst"),3)
?switch()
?arg_NumColumnIdex
outcome<-as.numeric(subset(data1,select=c(2,7,11,17,23)))
outcome<-subset(data1,select=c(2,7,11,17,23))
minoutcome = min(outcome[,(11,17,23)],na.rm=TRUE)
minoutcome = min(outcome[[(11,17,23)]],na.rm=TRUE)
source('~/best1.R')
source('~/best1.R')
best("TX","heart attack")
best1("TX","heart attack")
best1("TX","heart attack")
source('~/best1.R')
best1("TX","heart attack")
source('~/best1.R')
best1("TX","heart attack")
best1("TX","heart attack")
best1("TX","heart attack")
source('~/best1.R')
source('~/.active-rstudio-document')
best1("TX","heart attack")
source('~/.active-rstudio-document')
source('~/best1.R')
source('~/.active-rstudio-document')
best1("TX","heart attack")
source('~/best1.R')
best1("TX","heart attack")
source('~/.active-rstudio-document')
best1("TX","heart attack")
source('~/.active-rstudio-document')
source('~/best1.R')
source('~/best1.R')
best1("TX","heart attack")
source('~/.active-rstudio-document')
source('~/best1.R')
best1("TX","heart attack")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/best1.R')
best1("TX", "heart attack")
source('~/best1.R')
best1("TX", "heart attack")
source('~/best1.R')
best1("TX", "heart attack")
best1("MD","pnu")
best1("MD","pneumonia")
source('~/rankhospital1.R')
rankhospital1("MD","heart failure")
rankhospital1("MD","heart failure")
outcome<-read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome<-subset(outcome,outcome[,7]=="TX")
outcome[,11]
outcome[,17]
?order()
outcome1<-order(outcome[1,"Hospital.Name"],na.last=TRUE)
outcome1
source('~/rankhospital1.R')
rankhospital("MD","heart attack")
rankhospital1("MD","heart attack")
source('C:/Users/Yugang/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()         # Returns original matrix
cacheSolve(amatrix)   # Computes, caches, and returns    matrix inverse
amatrix$getinverse()  # Returns matrix inverse
cacheSolve(amatrix)   # Returns cached matrix inverse using previously computed matrix inverse
amatrix$set(matrix(c(0,5,99,66), nrow=2, ncol=2)) # Modify existing matrix
cacheSolve(amatrix)   # Computes, caches, and returns new matrix inverse
amatrix$get()         # Returns matrix
amatrix$getinverse()  # Returns matrix inverse
source('~/.active-rstudio-document')
source('~/rankhospital1.R')
source('~/rankhospital1.R')
source('~/rankhospital1.R')
rankhospital("TX","heart failure",4)
rankhospital1("TX","heart failure",4)
source('~/rankhospital1.R')
rankhospital1("TX","heart failure",4)
rankhospital1("MN","heart attack",5000)
rankhospital1("MD","heart attack","worst")
rankhospital1("aa","heart attack","worst")
rankhospital1("MD","heart attack","best")
source('~/.active-rstudio-document')
rankhospital1("MD","heart attack","worst")
source('~/rankhospital1.R')
rankhospital1("MD","heart attack","worst")
rankhospital1("MD","heart attack","best")
rankhospital("TX","heart failure",4)
rankhospital1("TX","heart failure",4)
rankhospital1("TT","heart failure",4)
rankhospital1("TX","heart failure",4000)
source('~/rankhospital1.R')
rankhospital1("TT","heart failure",4)
rankhospital1("TX","heart failure",4)
rankhospital1("MD","heart attack","worst")
source('~/rankhospital1.R')
rankhospital1("MD","heart attack","worst")
source('~/rankhospital1.R')
source('~/rankhospital1.R')
rankhospital1("MD","heart attack","worst")
rankhospital1("MD","heart attack","best")
source('~/rankhospital1.R')
rankhospital1("TX","heart",4)
outcome
rankhospital1("Tt","heart",4)
rankhospital1("Tt","heart attack",4)
rankhospital1("TX","heart failure",4000)
rankhospital1("TX","heart failure",4)
source('~/.active-rstudio-document')
source('~/rankhospital1.R')
source('~/rankhospital1.R')
source('~/rankhospital1.R')
source('~/rankhospital1.R')
rankhospital1("MD","heart attack","worst")
source('~/rankhospital1.R')
rankhospital1("TX","heart failure",4)
source('~/rankhospital1.R')
source('~/rankhospital1.R')
rankhospital1("MD","heart attack","worst")
source('~/rankall.R')
head(rankall("heart attack",20),10)
tail(rankall("penumonia","worst"),3)
tail(rankall("pneumonia","worst"),3)
?table
source('~/rankall1.R')
tail(rankall1("pneumonia","worst"),3)
head(rankall1("heart attack",20),10)
source('~/rankall1.R')
head(rankall1("heart attack",20),10)
head(rankall1("heart attack",20),10)
source('~/rankall1.R')
head(rankall1("heart attack",20),10)
source('~/rankall1.R')
source('~/rankall1.R')
ead(rankall1("heart attack",20),10)
head(rankall1("heart attack",20),10)
source('~/rankall1.R')
head(rankall1("heart attack",20),10)
source('~/rankall1.R')
head(rankall1("heart attack",20),10)
source('~/rankall1.R')
head(rankall1("heart attack",20),10)
source('~/rankall1.R')
head(rankall1("heart attack",20),10)
source('~/rankall1.R')
head(rankall1("heart attack",20),10)
source('~/rankall1.R')
head(rankall1("heart attack",20),10)
head(rankall1("heart ",20),10)
source('~/rankhospital1.R')
source('~/rankhospital1.R')
source('~/rankhospital1.R')
rankhospital1("TX","heart failure",4)
rankhospital1("MN","heart attack",5000)
rankhospital1("MD","heart attack","worst")
source('~/rankhospital1.R')
rankhospital1("MD","heart attack","worst")
rankhospital1("MD","heart attack","best")
rankhospital1("M","heart attack","best")
rankhospital1("MD","heart ","best")
rankhospital1("TX","heart failure",4)
source('~/rankall2.R')
head(rankall1("heart attack",20),10)
head(rankall2("heart attack",20),10)
source('~/rankall2.R')
head(rankall2("heart attack",20),10)
source('~/rankhospital2.R')
rankhospital2("TX","heart failure",4)
source('~/rankhospital2.R')
rankhospital2("TX","heart failure",4)
rankhospital2("MD","heart attack","worst")
source('~/best2.R')
best2("TX","heart attack")
best("TX","heart failure")
best("MD","heart attack")
best("BB","heart attack")
outcomeDfr <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcomeDfr[,11]
as.numeric(outcomeDfr[,17])
tableDfr <- data.frame(State = names(tapply(outcomeDfr$State, outcomeDfr$State,
length)), Freq = tapply(outcomeDfr$State, outcomeDfr$State, length))
tableDfr
inputDfr <- data.frame(Outcome = c("heart attack", "heart failure", "pneumonia"),
Col = c(11, 17, 23))
inputDfr
nrow(inputDfr[inputDfr$Outcome, ])
stateDfr<-outcomeDfr[outcomeDfr$State=="VA", ]
stateDfr
stateDfr <- outcomeDfr[outcomeDfr$State == stateChr, ]
stateDfr <- outcomeDfr[outcomeDfr$State == "VA", ]
stateDfr<-stateDfr[complete.cases(stateDfr[, 11])]
stateDfr <- outcomeDfr[outcomeDfr$State == "VA", 11]
stateDfr
stateDfr<-stateDfr[order(stateDfr[, 11])], stateDfr$Hospital.Name), ]
stateDfr <- stateDfr[order(stateDfr[, 11], stateDfr$Hospital.Name), ]
stateDfr <- stateDfr[order(stateDfr), stateDfr$Hospital.Name), ]
stateDfr <- stateDfr[order(stateDfr), stateDfr$Hospital.Name, ]
stateOrder<-order(stateDfr[, 11])
stateOrder<-order(stateDfr)
stateOrder
stateDfr
tableDfr <- data.frame(State = names(tapply(outcomeDfr$State, outcomeDfr$State,
length)), Freq = tapply(outcomeDfr$State, outcomeDfr$State, length))
tableDfr
rownames(tableDfr)<-NULL
tableDfr
inputDfr
stateDfr<-outcomeDfr[outcomeDfr$State="VA"]
stateDfr<-outcomeDfr[outcomeDfr$State=="VA", ]
View(tableDfr)
View(stateDfr)
stateDfr<-stateDfr[complete.cases(stateDfr[, 11])]
stateDfr<-stateDfr[complete.cases(stateDfr[, 11]), ]
View(stateDfr)
stateDfr<-stateDfr[order(stateDfr[, 11],stateDfr$Hospital.Name)]
stateDfr <- stateDfr[order(stateDfr[, colNum], stateDfr$Hospital.Name), ]
stateDfr <- stateDfr[order(stateDfr[, 11], stateDfr$Hospital.Name), ]
stateDfr
View(stateDfr)
name<-data.frame(hospital=stateDfr$Hospital.Name, state="VA")
View(name)
name<-data.frame(hospital=stateDfr$Hospital.Name, heartattack=stateDfr[, 11])
name
stateRank<-stateDfr[2, stateDfr$Hospital.Name]
stateRank<-stateDfr[2, ]$Hospital.Name
stateRank
View(outcomeDfr)
minHospital<-min(outcomeDfr[, 11])
best<-outcomeDfr(outcomeDfr$Hospital.Name, minHospital)
best<-outcomeDfr(outcomeDfr$Hospital.Name, outcome[, 11]==minHospital)
best<-outcomeDfr(outcomeDfr$Hospital.Name, outcomeDfr[, 11]==minHospital)
source('~/rankhospital.R')
source('~/best.R')
source('~/rankall.R')
source('~/rankall.R')
source('~/.active-rstudio-document')
source('~/best.R')
best("TX","heart attack")
best("TX","heart failure")
source('~/best.R')
best("TX","heart attack")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/best.R')
best("TX","heart attack")
source('~/.active-rstudio-document')
source('~/best.R')
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX", "heart attack")
source('~/best.R')
best("TX", "heart attack")
source('~/best.R')
best("TX", "heart attack")
outcomeInput <- read.csv("outcome-of-care-measures.csv",colClasses="character")
stateName <- outcomeInput[outcomeInput$State == "TX", ]
stateName
outcome1 <- outcomeInput[outcomeInput$Outcome == "heart attack", 2]
outcome1
outcomeinput
outcomeInput <- data.frame(Outcome = c("heart attack", "heart failure", "pneumonia"),
Col = c(11, 17, 23))
outcomeInput
outcome1 <- outcomeInput[outcomeInput$Outcome == "heart attack", 2]
outcome1
minoutcome <- min(stateName[outcome1],na.rm=TRUE)
minoutcome <- which.min(stateName[, outcome1])
minoutcome
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
source('~/best.R')
best("TX","heart attack")
best("TX","heart failure")
best("MD","pneumonia")
best("BB","heart attack")
best("NY","heart attac")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
2
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('~/rankall.R')
head(rankall("Heart attack",20),10)
head(rankall("heart attack",20),10)
source('~/rankall.R')
head(rankall("heart attack",20),10)
source('~/rankall.R')
head(rankall("heart attack",20),10)
outcomeInput <- read.csv("outcome-of-care-measures.csv",colClasses="character")
StateTable <- data.frame(State = names(tapply(outcomeInput$State, outcomeInput$State,
length)), Freq = tapply(outcomeInput$State, outcomeInput$State, length))
StateTable
outcomeInput <- data.frame(Outcome = c("heart attack", "heart failure", "pneumonia"),
Col = c(11, 17, 23))
outcomeInput
stateResult <- outcomeInput[outcomeInput$State == "TX", ]
stateResult
colNum <- outcomeInput[outcomeInput$Outcome == "outcome"heart attack"", 2]
colNum <- outcomeInput[outcomeInput$Outcome == "heart attack"", 2]
colNum <- outcomeInput[outcomeInput$Outcome == "heart attack"", 2]
colNum <- outcomeInput[outcomeInput$Outcome == "heart attack", 2]
colNum
stateResult <- stateResult[complete.cases(stateResult[, colNum]), ]
source('~/Data Science/R Programming/rankall2.R')
head(rankall("heart attack",20),10)
head(rankall2("heart attack",20),10)
source('~/rankall.R')
head(rankall("heart attack",20),10)
source('~/rankall.R')
tail(rankall("pneumonia","worst"),3)
tail(rankall("heart failure"),10)
submit()
submit()
submit()
help.start()
install.packages("vcd")
help(package="vcd")
library(vcd)
help(Arthiritis)
??Arthritis
Arthritis
example(Arthritis)
dim1<-c("A1","A2")
dim2<-c("B1","B2","B3")
dim3<-c("C1","C2","C3","C4")
z<-array(1:24,c(2,3,4),dimnames=list(dim1,dim2,dim3))
z
q()
install.packages("RODBC")
attach(mtcars)
plot(wt,mpg)
abline(lm(mpg~wt))
title("Regression of MPG on Weight")
detach(mtcars)
dose<-c(20,30,40,50,45,60)
drugA<-c(16,20,27,40,60)
plot(dose,drugA,type="b")
dose<-c(20,30,40,45,60)
plot(dose,drugA,type="b")
plot(dose,drugA,type="b",lty=3,lwd=3,pch=15,cex=2)
plot(dose,drugA,type="b",lty=3,lwd=3,pch=15,cex=2,col="red")
q()
getwd()
setwd("C:/Users/Yugang")
setwd("C:/Users/Yugang/GettingCleaningData")
q()
